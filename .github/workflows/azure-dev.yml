name: Build Application

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      SOLUTION: Analysis.sln
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}      
    steps:
      - name: Checkout
        uses: actions/checkout@v4    

      - name: Setup dotnet
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Install dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build ${{ vars.SOLUTION }}

      - name: Test with the dotnet CLI
        run: dotnet test

      - name: SonarScanner for .NET 8 with pull request decoration support
        uses: highbyte/sonarscan-dotnet@v2.3.1
        with:
          # The key of the SonarQube project
          sonarProjectKey: jsacapdev_analysis.dotnet
          # The name of the SonarQube project
          sonarProjectName:  analysis.dotnet
          # The name of the SonarQube organization in SonarCloud. For hosted SonarQube, skip this setting.
          sonarOrganization: jsacapdev
          # Optional command arguments to dotnet build
          dotnetBuildArguments: ${{ vars.SOLUTION }}
          # Optional command arguments to dotnet test
          dotnetTestArguments: ${{ vars.SOLUTION }} --logger trx --collect:"XPlat Code Coverage" -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=opencover
          # Optional extra command arguments the the SonarScanner 'begin' command
          sonarBeginArguments: /d:sonar.cs.opencover.reportsPaths="**/TestResults/**/coverage.opencover.xml" -d:sonar.cs.vstest.reportsPaths="**/TestResults/*.trx"        

